@model GroupingSystem.Models.SubmittedGroup
<link rel="stylesheet" type="text/css" href="~/Content/Site.css">
@{
    ViewBag.Title = "Approve";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Are you sure that you wish to Approve this group?</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @*Output the group's information*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.GroupID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.GroupID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.GroupID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.groupOwner, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupOwner, "", new { @class = "text-danger" })
        </div>
    </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.groupOwner,"Group members", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @ViewBag.chosenGroup.member1
                @ViewBag.chosenGroup.member2
                @ViewBag.chosenGroup.member3
                @ViewBag.chosenGroup.member4
            </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupEvent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupEvent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.eventId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.eventId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Approve Group" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
