@model GroupingSystem.Models.Group
<link href="~/Content/Site.css" rel="stylesheet" />
@{
    ViewBag.Title = "Join";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Viewing Group @Html.DisplayFor(model => model.groupName)</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.groupName, "Group Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupEvent, "Event", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupEvent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupOwner, "Created By", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupOwner, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupOwner, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.eventId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.eventId, "", new { @class = "text-danger" })
        </div>
    </div>


    @if (Model.member1 == null)
    {
        <div class="form-group">
            @if (Model.groupSize >= 2)

            {
                @Html.LabelFor(model => model.member1, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.member1, "", new { @class = "text-danger" })
                </div>
            }

        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member1, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member1, "", new { @class = "text-danger" })
            </div>
        </div>
    }





    @if (Model.member2 == null)
    {
        <div class="form-group">
            @if (Model.groupSize >= 3)
            {
                @Html.LabelFor(model => model.member2, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.member2, "", new { @class = "text-danger" })
                </div>
            }
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member2, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member2, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.member3 == null)
    {
        <div class="form-group">
            @if (Model.groupSize >= 4)
            {
                @Html.LabelFor(model => model.member3, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.member3, "", new { @class = "text-danger" })
                </div>
            }
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member3, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member3, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.member4 == null)
    {
        <div class="form-group">
            @if (Model.groupSize >= 5)
            {
                @Html.LabelFor(model => model.member4, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.member4, "", new { @class = "text-danger" })
                </div>
            }
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member4, "Group Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member4, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (ViewBag.memberCount == Model.groupSize)
    {
        <p>Group is full</p>
    }

    @{bool valid = true;}
    @if (Model.member1 == User.Identity.Name)
    {
        <p>You are already in this group.</p>
        valid = false;
        @Html.ActionLink("Leave Group", "Leave", new { id = Model.Id }, new { @class = "btn btn-primary btn-large" })
    }
    @if (Model.member2 == User.Identity.Name)
    {
        <p>You are already in this group.</p>
        valid = false;
        @Html.ActionLink("Leave Group", "Leave", new { id = Model.Id }, new { @class = "btn btn-primary btn-large" })
    }
    @if (Model.member3 == User.Identity.Name)
    {
        <p>You are already in this group.</p>
        valid = false;
        @Html.ActionLink("Leave Group", "Leave", new { id = Model.Id }, new { @class = "btn btn-primary btn-large" })
    }
    @if (Model.member4 == User.Identity.Name)
    {
        <p>You are already in this group.</p>
        valid = false;
        @Html.ActionLink("Leave Group", "Leave", new { id = Model.Id }, new { @class = "btn btn-primary btn-large" })
    }
    @if (Model.groupOwner == User.Identity.Name)
    {
        <p>You are the owner of this group.</p>
        valid = false;
    }
    @if (valid == true)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Join Group" class="btn btn-default" />
            </div>
        </div>  }

</div>
}

<div>
    @Html.ActionLink("Back to Groups", "Index",null , new { @class = "btn btn-primary btn-large" })
</div>
