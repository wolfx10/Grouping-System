@model GroupingSystem.Models.Group

@{
    ViewBag.Title = "SubmitGroup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>SubmitGroup</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Group</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.groupName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.groupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupOwner, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupOwner, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.member1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.member1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.member2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.member2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.member3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.member3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.member4, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.member4, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.submitted, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DisplayFor(model => model.submitted)
                @Html.HiddenFor(model => model.submitted)
                @Html.ValidationMessageFor(model => model.submitted, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupEvent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupEvent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
