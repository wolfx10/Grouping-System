@model GroupingSystem.Models.Group

@{
    ViewBag.Title = "SubmitGroup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/Content/Site.css">
<h2>Are you sure that you wish to submit this group?</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.groupName, "Group Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupSize, "Group Size", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.groupOwner, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.groupOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.groupOwner, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.member1 != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member1, "Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member1, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.member2 != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member2, "Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member2, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.member3 != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member3, "Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member3, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.member4 != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.member4, "Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.member4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member4, "", new { @class = "text-danger" })
            </div>
        </div>
    }
        <div class="form-group">
            @Html.LabelFor(model => model.groupDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.groupDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.groupDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.groupEvent, "Event", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DisplayFor(model => model.groupEvent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupEvent, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.eventId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.eventId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Group" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",null,new { @class = "btn btn-primary btn-large" })
</div>
